{ "id": "chatcmpl-8PU6iwJ30BgAg2DpAwBrKLforioAL", "object": "chat.completion", "created": 1701084624, "model": "gpt-4-1106-preview", "choices": [ { "index": 0, "message": { "role": "assistant", "content": "はい、VBScriptを使用してExcelで有効になっているアドインを取得し、それらを出力することができます。以下はそのためのサンプルスクリプトです。\n\n```vbscript\nOption Explicit\n\n' Excel アプリケーションのインスタンスを作成します\nDim objExcel\nSet objExcel = CreateObject(\"Excel.Application\")\n\n' Excelの表示を無効に\nobjExcel.Visible = False\n\n' 追加機能 (アドイン) コレクションをループ処理して、有効なアドインを列挙します\nDim objAddIn\nFor Each objAddIn In objExcel.AddIns\n If objAddIn.Installed Then\n ' アドインがインストール (つまり有効) されている場合は、名前を表示します\n WScript.Echo \"有効なアドイン: \" & objAddIn.Name\n End If\nNext\n\n' Excelを閉じます（作業を保存せず）\nobjExcel.Quit\n\n' オブジェクト参照を解放します\nSet objExcel = Nothing\n```\n\nこのスクリプトは以下の処理を行います:\n1. Excelのインスタンスを作成します。\n2. Excelを見えないようにします。\n3. Excelの`AddIns`コレクションをループ処理し、`Installed`プロパティが`True`に設定されている（=有効になっている）アドインの名前を出力します。\n4. Excelのインスタンスを閉じてオブジェクト参照を解放します。\n\nこのスクリプトをファイルとして保存し、`.vbs`拡張子で終わるようにします（例: `ListExcelAddIns.vbs`）。スクリプトを実行するには、保存したファイルをダブルクリックするか、コマンドラインから`cscript ListExcelAddIns.vbs`のように実行します。結果はコンソールまたはメッセージボックスに出力されます。" }, "finish_reason": "stop" } ], "usage": { "prompt_tokens": 38, "completion_tokens": 547, "total_tokens": 585 }, "system_fingerprint": "fp_a24b4d720c" }
