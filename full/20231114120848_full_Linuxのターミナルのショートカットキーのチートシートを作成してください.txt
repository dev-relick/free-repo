{ "id": "chatcmpl-8KmV3R9IMzagFNduY8UxM0otae8TT", "object": "chat.completion", "created": 1699963685, "model": "gpt-4-1106-preview", "choices": [ { "index": 0, "message": { "role": "assistant", "content": "Linuxのターマナルを使用する際に有用なショートカットキーをまとめたチートシートを以下に示します。これらのショートカットは、Bashシェルで一般的に使われていますが、他のシェルや環境によっては異なる場合があります。\n\n### カーソル移動\n\n| ショートカットキー | 効果 |\n| --------------------------- | ---------------------------------------- |\n| `Ctrl + A` | カーソルを行の先頭に移動 |\n| `Ctrl + E` | カーソルを行の末尾に移動 |\n| `Ctrl + B` | カーソルを一文字分左に移動（←） |\n| `Ctrl + F` | カーソルを一文字分右に移動（→） |\n| `Alt + B` | カーソルを一単語分左に移動 |\n| `Alt + F` | カーソルを一単語分右に移動 |\n| `Ctrl + XX` | カーソルを現在位置と行の先頭間でトグル |\n\n### テキストの編集\n\n| ショートカットキー | 効果 |\n| --------------------------- | ---------------------------------------- |\n| `Ctrl + K` | カーソル位置から行末までをカット |\n| `Ctrl + U` | カーソル位置から行頭までをカット |\n| `Ctrl + W` | カーソル位置から単語の先頭までをカット |\n| `Ctrl + Y` | カットしたテキストをペースト（ヤンク） |\n| `Alt + D` | カーソル位置から単語の末尾までをカット |\n| `Ctrl + D` | カーソル位置の文字を削除（ファイルの終わりでは終了） |\n| `Ctrl + H` | カーソルの前の文字を削除 |\n| `Ctrl + T` | カーソル位置の文字とその前の文字を交換 |\n| `Alt + T` | カーソル位置の単語とその前の単語を交換 |\n\n### コマンド履歴\n\n| ショートカットキー | 効果 |\n| --------------------------- | ---------------------------------------- |\n| `Ctrl + P` | 前のコマンド履歴に移動 |\n| `Ctrl + N` | 次のコマンド履歴に移動 |\n| `Ctrl + R` | 逆方向インクリメンタルサーチ |\n| `Ctrl + S` | 順方向インクリメンタルサーチ（一部環境では動作しない） |\n| `Ctrl + O` | 履歴エントリを実行し、次のエントリに移動 |\n| `Ctrl + G` | インクリメンタルサーチから抜け出す |\n| `Alt + .` or `Alt + _` | 直前のコマンドの最後の単語を挿入 |\n\n### コントロールキー\n\n| ショートカットキー | 効果 |\n| --------------------------- | ---------------------------------------- |\n| `Ctrl + L` | 画面をクリアして、新しいプロンプトを表示する |\n| `Ctrl + C` | 現在実行中のコマンドをキャンセル |\n| `Ctrl + Z` | 現在実行中のコマンドを停止し、バックグラウンドに移動する |\n| `Ctrl + D` | 入力が空の場合、シェル（ターミナル）を終了する |\n| `Ctrl + S` | 出力のスクロールを停止する（フリーズ） |\n| `Ctrl + Q` | 停止（フリーズ）していた出力のスクロールを再開する |\n\n### プロセス管理\n\n| ショートカットキー | 効果 |\n| --------------------------- | ---------------------------------------- |\n| `Ctrl + Z` | 現在実行中のプロセスを一時停止（ジョブコントロール用） |\n| `Ctrl + C` | 現在実行しているジョブを中断・終了する |\n\nこれらのショートカットキーは、効率的なターミナル操作に役立ちます。練習しておくとコマンドラインでの作業がぐっと速く、快適になります。" }, "finish_reason": "stop" } ], "usage": { "prompt_tokens": 32, "completion_tokens": 1232, "total_tokens": 1264 }, "system_fingerprint": "fp_a24b4d720c" }
