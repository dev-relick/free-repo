{ "id": "chatcmpl-8KyISGB7VyjKckKYIhOni9UbG89lW", "object": "chat.completion", "created": 1700009032, "model": "gpt-4-1106-preview", "choices": [ { "index": 0, "message": { "role": "assistant", "content": "以下は、指定されたリストファイルに記載されていないファイルを探し出してフルパスで `output.txt` に出力するバッチファイルの例です。このスクリプトはリストファイルの名前を `list.txt` と仮定します。`list.txt` はカレントディレクトリに存在し、各行に除外するファイルの名前（パターン）が記載されているとします。\n\n保存する前に、`list.txt` の名前を実際に使用するファイルの名前に適宜変更してください。\n\n```batch\n@echo off\nsetlocal EnableDelayedExpansion\n\n:: リストファイルのパスを設定\nset \"LIST_FILE=list.txt\"\n\n:: 出力ファイルのパスを設定\nset \"OUTPUT_FILE=output.txt\"\n\n:: 出力ファイルがすでに存在する場合は削除\nif exist \"%OUTPUT_FILE%\" del \"%OUTPUT_FILE%\"\n\n:: 一時ファイルを作成してリストファイルの内容を格納\nset \"TEMPFILE=exclude.tmp\"\ntype nul > \"%TEMPFILE%\"\nfor /f \"delims=\" %%i in (%LIST_FILE%) do (\n echo %%i>> \"%TEMPFILE%\"\n)\n\n:: カレントディレクトリ以下の全ファイルを再帰的に検索\nfor /r %%f in (*) do (\n set \"exclude=false\"\n for /f \"delims=\" %%p in (%TEMPFILE%) do (\n if \"%%~nxf\"==\"%%p\" set \"exclude=true\"\n )\n if !exclude! == false (\n echo %%f >> \"%OUTPUT_FILE%\"\n )\n)\n\n:: 一時ファイルを削除\nif exist \"%TEMPFILE%\" del \"%TEMPFILE%\"\n\n:: 終了\nendlocal\necho 出力ファイルが生成されました: %CD%\\%OUTPUT_FILE%\n```\n\nこのバッチファイルを使用すると、カレントディレクトリ以下を再帰的に検索し、`list.txt` ファイルに記載されていないすべてのファイルが `output.txt` にフルパスで出力されます。\n\nスクリプトの動作：\n1. リストファイルの名前を指定します（この例では `list.txt` というファイル名）。\n2. 出力ファイル `output.txt` が既に存在する場合は削除します。\n3. リストファイルの各行を一時ファイルに移します。\n4. カレントディレクトリから全ファイルを再帰的に検索します。\n5. 各ファイル名が一時ファイル内の除外リストに含まれていないことを確認します。\n6. 条件を満たすファイルのフルパスを出力ファイルに追記します。\n7. 最後に一時ファイルを削除します。\n\n実行する前に、カレントディレクトリに `list.txt` と出力ファイル `output.txt` が存在することを確認し、バッチファイルの拡張子を `.bat` とし、カレントディレクトリに保存してからバッチファイルを実行してください。\n\n注意点として、このバッチファイルはファイル名の完全一致のみを考慮しており、パターンマッチングやワイルドカードはサポートされていません。また、ファイル名の大文字小文字は区別されません。これをパターンマッチングに対応させたり、大文字小文字を区別するようにしたい場合はさらに複雑なロジックを実装する必要があります。" }, "finish_reason": "stop" } ], "usage": { "prompt_tokens": 109, "completion_tokens": 1022, "total_tokens": 1131 }, "system_fingerprint": "fp_a24b4d720c" }
