Oracleのexpコマンドでentry_d列が現在日付から3年前までのデータをエクスポートする。実行環境はWindows。expdpコマンドは使用しない。


Oracleの`exp`コマンドは、Oracleデータベースからデータをエクスポートするための従来のツールです。`exp`コマンドを使用して特定のクエリを実行してデータをエクスポートすることはできませんが、テーブルのサブセットをエクスポートするために`QUERY`パラメータを使用することができます。

特定の日付範囲に基づいてデータをエクスポートするには、`QUERY`パラメータを使用してエクスポートする行をフィルタリングします。`entry_d`列が日付タイプであると仮定して、以下はWindows環境でコマンドプロンプトから`exp`を使用して3年前までのデータをエクスポートする例です。

1. コマンドプロンプトを開きます。
2. `exp`コマンドを実行する前に、Oracle環境変数が適切に設定されていることを確認してください。`ORACLE_HOME`や`PATH`にOracleのバイナリがあるディレクトリへのパスが含まれている必要があります。
3. 以下のように`exp`コマンドを実行します（例は、`[username]`をユーザー名、`[password]`をパスワード、 `[tablename]`をテーブル名に置き換えてください）:

```shell
exp [username]/[password]@dbalias FILE=export.dmp TABLES=([tablename]) QUERY=\"WHERE entry_d >= ADD_MONTHS(SYSDATE, -36)\"
```

ここでは、`ADD_MONTHS(SYSDATE, -36)`を使用して3年前（36ヶ月前）の日付を計算しています。`QUERY`パラメータの値はダブルクォートで囲んで渡す必要があり、Windowsの場合、その内部のダブルクォートはエスケープされている必要があります（この例ではバックスラッシュ`\`を使用しています）。

実際にコマンドを実行するときは、接続情報（`[username]/[password]@dbalias`）やファイル名（`FILE=export.dmp`）、テーブル名（`TABLES=([tablename])`）を適切な値に置き換えてください。

`expdp`コマンド（Data Pump Export）はもっと高度な機能を備えていますが、今回の質問ではそれを使わずに`exp`を使用する方法を示しました。Oracleの新しいバージョンでは、`exp`の代わりに`expdp`を使用することが推奨されているので、可能であれば`expdp`の使用を検討してください。
